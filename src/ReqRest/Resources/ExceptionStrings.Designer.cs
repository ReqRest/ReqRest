//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ReqRest.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ReqRest.Resources.ExceptionStrings", typeof(ExceptionStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IHttpContentDeserializer factory for the current response type returned null instead of a deserializer instance..
        /// </summary>
        internal static string ApiResponse_InvalidResponseDeserializer {
            get {
                return ResourceManager.GetString("ApiResponse_InvalidResponseDeserializer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The response had a status code which was not configured. When building a request via the ApiRequest API, ensure that you declare a possible response for this status code via the &quot;Receive()&quot; method chain, so that a response to the request knows which type to deserialize for the given status code..
        /// </summary>
        internal static string ApiResponse_NoResponseTypeInfoForResponse {
            get {
                return ResourceManager.GetString("ApiResponse_NoResponseTypeInfoForResponse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configured HttpClient provider function returned null. Ensure that the function returns a valid HttpClient instance..
        /// </summary>
        internal static string HttpClientProvider_Returned_Null {
            get {
                return ResourceManager.GetString("HttpClientProvider_Returned_Null", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NoContentSerializer can only (de-)serialize the NoContent type..
        /// </summary>
        internal static string NoContentSerializer_CanOnlySerializeNoContentType {
            get {
                return ResourceManager.GetString("NoContentSerializer_CanOnlySerializeNoContentType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At least one status code or status code range must be provided..
        /// </summary>
        internal static string ResponseTypeInfo_MustProvideAtLeastOneStatusCode {
            get {
                return ResourceManager.GetString("ResponseTypeInfo_MustProvideAtLeastOneStatusCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some status code ranges have conflicting values. When defining the possible response types of an API request, ensure that the status code ranges don&apos;t cover the same status codes (except in combination with wildcards).
        ///
        ///The conflicting status codes are:
        ///{0}.
        /// </summary>
        internal static string ResponseTypeInfoCollection_ConflictingStatusCodeRanges {
            get {
                return ResourceManager.GetString("ResponseTypeInfoCollection_ConflictingStatusCodeRanges", resourceCulture);
            }
        }
    }
}
