<Project Sdk="Microsoft.NET.Sdk">
  
  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;netstandard2.1</TargetFrameworks>
    <IsPackable>true</IsPackable>
    <Description>
ReqRest allows you to easily project a RESTful HTTP API to a C#/VB library that feels and behaves like a normal C# API. If you use ReqRest to wrap your REST API, you will end up with a library that is fully typed, has IntelliSense and compiler support and is thus incredibly easy to use.

In addition, ReqRest makes this process as simple as possible. You will be able to leverage a fluent method style for defining how the REST API behaves for different scenarios, i.e. what input it expects and what it returns.

Under the hood, ReqRest follows one very simple core philosophy - to be nothing more but an enhancement of the .NET Framework. ReqRest tries to utilize .NET's types whenever possible. As a result, most members in the library are nothing more but a convenient, specialized way to create HTTP requests using .NET's HttpClient API. This means that libraries built with ReqRest are incredibly adaptable. Whatever you can do with an HttpClient, you can do with ReqRest. Your imagination is your limit! 

Learn more about ReqRest at https://github.com/ReqRest/ReqRest and https://reqrest.github.io.
    </Description>
    <DefineConstants>$(DefineConstants);NULLABLE_ATTRIBUTES_EXCLUDE_FROM_CODE_COVERAGE</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="NCommons.Monads" Version="1.3.2" />
    <PackageReference Include="Nullable" Version="1.1.1" PrivateAssets="All" />
  </ItemGroup>

  <!-- T4 Templates. -->
  <ItemGroup>
    <DotNetCliToolReference Include="dotnet-t4-project-tool" Version="2.0.5" />
    <TextTemplate Include="**/Generated/**/*.tt" />
  </ItemGroup>

  <Target Name="TextTemplateTransform" BeforeTargets="BeforeBuild">
    <ItemGroup>
      <Compile Remove="**/Generated/**/*.cs" />
    </ItemGroup>
    <Exec WorkingDirectory="$(ProjectDir)" Command="dotnet t4 %(TextTemplate.Identity)" />
    <ItemGroup>
      <Compile Include="**/Generated/**/*.cs" />
    </ItemGroup>
    <PropertyGroup>
      <Nullable>enable</Nullable>
    </PropertyGroup>
  </Target>
  
</Project>
